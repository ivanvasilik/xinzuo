{%- doc -%}
  Renders the cart drawer, a slide-out panel that displays the contents of the cart. It includes the cart icon that acts as a trigger.

  @param {object} [settings] - An object containing theme settings.

  @param {boolean} [settings.auto_open_cart_drawer] - If `true`, the cart drawer opens automatically after an item is
  added.
  @param {string} [settings.drawer_color_scheme] - The color scheme for the drawer.
{%- enddoc -%}

<script
  src="{{ 'cart-drawer.js' | asset_url }}"
  type="module"
  fetchpriority="low"
></script>

{% style %}
  .drawer-recommend {
    display: flex;
    flex-direction: column;
    gap: 24px;
    width: 100%;
  }

  .drawer-recommend h2 {
    font-family: "Sen";
    font-weight: 600;
    font-size: 22px;
    color: white;
  }

  .drawer-product {
    display: flex;
    gap: 20px;
  }

  .drawer-product img {
    width: 120px;
    height: auto;
    object-fit: cover;
  }

  .drawer-product-info {
    width: 100%;
    display: flex;
    gap: 24px;
    align-items: flex-start;
  }

  .drawer-product-info p {
    font-family: "Sen";
    font-weight: 600;
    font-size: 16px;
    color: #c1c4c7;
  }

  .drawer-product-info span {
    font-family: "Albert Sans";
    font-weight: 400;
    font-size: 14px;
    color: #86868b;
  }
{% endstyle %}

<cart-drawer-component
  class="cart-drawer"
  {{ block.shopify_attributes }}
  {% if settings.auto_open_cart_drawer %}
    auto-open
  {% endif %}
>
  <button
    class="button header-actions__action button-unstyled"
    on:click="/open"
    aria-label="{{ 'accessibility.open_cart_drawer' | t }} {{ 'accessibility.cart_count' | t}}: {{ cart.item_count }}"
  >
    {% render 'cart-icon-component' %}
  </button>

  <dialog
    ref="dialog"
    class="cart-drawer__dialog dialog-modal dialog-drawer color-{{ settings.drawer_color_scheme }}{% if cart.empty? %} cart-drawer--empty{%endif%}"
    scroll-lock
  >
    <div class="cart-drawer__inner">
      <cart-items-component
        class="cart-items-component"
        data-section-id="{{ section.id }}"
      >
        {%- if cart.empty? -%}
          <div class="cart-drawer__header">
            <button
              ref="closeButton"
              on:click="cart-drawer-component/close"
              class="button close-button cart-drawer__close-button button-unstyled"
              aria-label="{{ 'actions.close_dialog' | t }}"
            >
              <span class="svg-wrapper">
                {{- 'icon-close.svg' | inline_asset_content -}}
              </span>
            </button>
          </div>

          <div
            class="cart-drawer__content motion-reduce"
            aria-label="{{ 'accessibility.cart' | t }}"
          >
            <span class="cart-drawer__heading h3 cart-drawer__heading--empty">
              {{ 'content.your_cart_is_empty' | t }}
            </span>

            <div class="cart-drawer__items">
              {% render 'cart-products' %}
            </div>
          </div>
        {%- else -%}
          <div
            class="cart-drawer__header"
            id="cart-drawer-header"
          >
            <div>
              <span class="cart-drawer__heading h3">
                Your Cart
                {% render 'cart-bubble' %}
              </span>

              <button
                ref="closeButton"
                on:click="cart-drawer-component/close"
                class="button close-button cart-drawer__close-button button-unstyled"
                aria-label="{{ 'actions.close_dialog' | t }}" 
              >
                <span class="svg-wrapper">
                  {{- 'icon-close.svg' | inline_asset_content -}}
                </span>
              </button>
            </div>
            {%- liquid 
              assign message = settings.shipping_message
              assign total_price = cart.total_price | divided_by: 100.00
              assign shipping_value = settings.shipping_value
              assign credit_value = settings.credit_value
              if total_price < shipping_value
                assign balance = settings.shipping_value | minus: total_price
                assign balance_txt = balance | times: 100.00 | money_with_currency
                assign message = settings.shipping_message | replace: '{PRICE}', balance_txt
              elsif total_price < credit_value
                assign balance = settings.credit_value | minus: total_price
                assign balance_txt = balance | times: 100.00 | money_with_currency
                assign message = settings.credit_message | replace: '{PRICE}', balance_txt
              else
                assign message = settings.complete_message
              endif
              assign progress_value = shipping_value | times: 100 | divided_by: credit_value
            -%}
            
            <p id="native-free-shipping-cta">{{ message }}</p>
            <span class="progress-bar-cart" style="position: relative">
              <progress class="progress-cart" value="{{ total_price }}" max="{{ settings.credit_value }}"></progress>
              <div class="shipping-value" style="left: {{ progress_value }}%;"></div>
            </span>
          </div>
          
          <div
            class="cart-drawer__content motion-reduce"
            aria-label="{{ 'accessibility.cart' | t }}"
            style="--header-height: 60px;"
          >
            <scroll-hint
              class="cart-drawer__items"
            >
              {% render 'cart-products' type: "drawer" %}
            </scroll-hint>

            {% comment %} <div
              class="cart-drawer__summary"
            >
              {% render 'cart-summary' %}
            </div> {% endcomment %}
          </div>
          {% if settings.drawer_recommend != blank %}
            <div class="drawer-recommend">
              <h2>You might also like</h2>
              {% for product in settings.drawer_recommend %}
                <div class="drawer-product">
                  <img src="{{ product.featured_image | img_url: 'master' }}" width="100%" height="100%" alt="Cart Recommend {{ product.title }}">
                  <div class="drawer-product-info">
                    <div>
                      {% assign collection = product.collections.first %}
                      <p>{{ collection.title }}&nbsp;-&nbsp;{{ product.title }}</p>
                      <span>{{ product.description }}</span>
                    </div>
                    <div>
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                        <g clip-path="url(#clip0_4235_58801)">
                          <path d="M4 12L12 4" stroke="#86868B" stroke-linecap="round" stroke-linejoin="round"/>
                          <path d="M5.5 4H12V10.5" stroke="#86868B" stroke-linecap="round" stroke-linejoin="round"/>
                        </g>
                        <defs>
                          <clipPath id="clip0_4235_58801">
                            <rect width="16" height="16" fill="white"/>
                          </clipPath>
                        </defs>
                      </svg>
                    </div>
                  </div>
                </div>
              {% endfor %}
            </div>
          {% endif %}
        {%- endif -%}
      </cart-items-component>
    </div>
  </dialog>
</cart-drawer-component>

{% stylesheet %}
  .cart-items-component {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .cart-drawer__heading .cart-bubble {
    width: fit-content;
    border-radius: var(--style-border-radius-buttons-primary);
    aspect-ratio: auto;
    padding: var(--cart-padding);
  }

  .cart-drawer__heading .cart-bubble[data-maintain-ratio] {
    aspect-ratio: 1;
    min-width: 26px;
  }

  .cart-drawer__header {
    background-color: var(--color-background);
    display: flex;
    flex-direction: column;
    width: 100%;
    padding: var(--cart-drawer-padding);
    border-bottom: var(--style-border-width) solid none;
    position: sticky;
    top: 0;
    z-index: 1;

    @media screen and (min-width: 750px) {
      padding: var(--cart-drawer-padding-desktop);
    }
  }

  .cart-drawer__dialog {
    overflow: hidden;
  }

  .cart-drawer__inner {
    height: 100%;
    overflow: hidden;
  }

  .cart-drawer__content {
    height: calc(100% - var(--header-height));
    display: flex;
    flex-direction: column;
  }

  .cart-drawer__summary {
    background-color: var(--color-background);
    position: sticky;
    bottom: 0;
    z-index: 1;
  }
{% endstylesheet %}
